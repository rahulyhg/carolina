(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{190:function(t,e,n){"use strict";n.r(e);var a=n(0),o=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"guarding-the-routes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#guarding-the-routes","aria-hidden":"true"}},[t._v("#")]),t._v(" Guarding the Routes")]),n("p",[t._v("We need to apply an authentication guard to all the routes we just defined,\nsince we only want logged-in users to be able to access them. We could\nspecify middleware in the route configuration, but since we want the\nauth guard to apply to all handlers of the Controller class, we can do it\nthere.")]),n("p",[t._v("In "),n("code",[t._v("site/http/controllers/item-controller.js")]),t._v(", below the constructor but above\nthe handler methods, create the method "),n("code",[t._v("getMiddleware")]),t._v(":")]),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMiddleware")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Carolina/Auth/AuthGuardMiddleware'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("The named Middleware class is provided by the Carolina Auth plugin, and\nprotects all routes handled by this Controller class for access by users\nwho are not logged in. Let's try it.")]),n("p",[t._v("Run the server using "),n("code",[t._v("node . runserver")]),t._v(" and visit the homepage of the running\napplication. Then try to visit "),n("code",[t._v("http://localhost:8080/items")]),t._v(". You will be\nredirected to the login page.")]),n("p",[t._v('We haven\'t created any accounts yet and registration should be open by default,\nso click the "Register" link at the top right and create some account.')]),n("p",[t._v('Once you create the account you should be able to immediately login since\nrequiring e-mail verification is disabled by default. Once you login, you\nwill be redirect to "/home", which we haven\'t defined a controller for.')]),n("p",[t._v('We don\'t want users redirect to "/home". Open the config file for the auth\nplugin, '),n("code",[t._v("config/carolina_auth.js")]),t._v(". Look for the value "),n("code",[t._v("loginRedirect")]),t._v(', which\nis set to "/home" by default and change it to say "/items".')]),n("p",[t._v("Restart the server and go to "),n("code",[t._v("http://localhost:8080/auth/login")]),t._v("\nand you will be redirected to\n"),n("code",[t._v("/items")]),t._v(".")]),n("p",[t._v("Go to "),n("code",[t._v("http://localhost:8080/auth/logout")]),t._v(" and click the logout button.\nThen try going to "),n("code",[t._v("http://localhost:8080/items")]),t._v(" and you should be blocked\nand sent to the login page again. The Auth Guard is now working!")])])}],!1,null,null,null);e.default=o.exports}}]);