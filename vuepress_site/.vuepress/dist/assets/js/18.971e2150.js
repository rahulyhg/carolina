(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{156:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"logging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logging","aria-hidden":"true"}},[t._v("#")]),t._v(" Logging")]),a("p",[t._v("The Logger Service facilitates writing logs. It does so by checking the various\nLoggers that it maintains (which you configure) and sending log entries to each\nLogger that should record it. This makes it easy to log things throughout\nyour application (at various levels) and editing the Logger configuration\nto determine which logs will actually get recorded and how.")]),a("p",[t._v("The Logger Service is available from the Carolina global object:")]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" LoggerSvc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Carolina"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Logger'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"configuring-log-channels"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuring-log-channels","aria-hidden":"true"}},[t._v("#")]),t._v(" Configuring Log Channels")]),a("p",[t._v("The Logger Service sends logs to logger channels, each of which is an instance\nof some type of Logger class which is designed for writing logs in various\nways.")]),a("p",[t._v("The configuration for logger channels is found in the "),a("code",[t._v("logChannels")]),t._v(" property\nof "),a("code",[t._v("config/logger.js")]),t._v(". It is an object which maps logger names to objects\nthat will be used to create Logger instances. The actual Logger class used\nis specified by the property "),a("code",[t._v("driver")]),t._v(". Each logger configuration object\nin the configuration must at least specify the "),a("code",[t._v("driver")]),t._v(" and the "),a("code",[t._v("level")]),t._v(".\nLevels will be explained in more detail further below. The objects may\nalso specify "),a("code",[t._v("sources")]),t._v(", an array of strings. If provided, only log entries\nfrom those named sources will be used. Source names are arbitrary and are\nspecified when writing log entries, but internally the Carolina framework\nuses Service names as the source of all log entries it sends.")]),a("p",[t._v("In addition to those properties, some actual driver types for logger channels\nmay have other configuration options available.")]),a("p",[t._v("Example configuration:")]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  logChannels"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      driver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TerminalLogger'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// all log levels")]),t._v("\n      useColors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// logs from all sources")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    httpLogs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      driver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'FileLogger'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      filePattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http.[].txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the [] is replaced with the date")]),t._v("\n      baseDir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cwd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'storage'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'logs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this is the default")]),t._v("\n      subDir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http-logs'")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this logger will create files like storage/logs/http-logs/http.20181111.txt")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("The above shows an example configuration using "),a("code",[t._v("TerminalLogger")]),t._v(" instance and a\n"),a("code",[t._v("FileLogger")]),t._v(" instance, as well as configuration examples for each.")]),a("h3",{attrs:{id:"specific-logger-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#specific-logger-types","aria-hidden":"true"}},[t._v("#")]),t._v(" Specific Logger Types")]),a("p",[t._v("For logger drivers, you can use any of these classes that come with the\nframework.")]),a("p",[a("strong",[t._v("Logger Drivers")])]),a("table",[a("thead",[a("tr",[a("th",[t._v("Type")]),a("th",[t._v("Description")])])]),a("tbody",[a("tr",[a("td",[a("code",[t._v("DbLogger")])]),a("td",[t._v("Writes log messages to the "),a("code",[t._v("log_entry")]),t._v(" database table.")])]),a("tr",[a("td",[a("code",[t._v("EmailLogger")])]),a("td",[t._v("Emails log messages.")])]),a("tr",[a("td",[a("code",[t._v("FileLogger")])]),a("td",[t._v("Writes log messages to a daily file.")])]),a("tr",[a("td",[a("code",[t._v("JsonPostLogger")])]),a("td",[t._v("Posts log messages to an API.")])]),a("tr",[a("td",[a("code",[t._v("TerminalLogger")])]),a("td",[t._v("Writes log messages to the terminal output.")])])])]),a("p",[t._v("Some Logger types have special configuration values you can use in\n"),a("code",[t._v("config/logger.js")]),t._v(".")]),a("p",[a("strong",[a("code",[t._v("DbLogger")])])]),a("p",[t._v("No additional configuration.")]),a("p",[a("strong",[a("code",[t._v("EmailLogger")])])]),a("ul",[a("li",[a("code",[t._v("mailer")]),t._v(": "),a("strong",[t._v("String")]),t._v(". The "),a("code",[t._v("mailer")]),t._v(' to use. Defaults to "default".')]),a("li",[a("code",[t._v("mailfrom")]),t._v(": "),a("strong",[t._v("String")]),t._v(". The FROM e-mail address to use.")]),a("li",[a("code",[t._v("mailto")]),t._v(": "),a("strong",[t._v("String")]),t._v(". The TO e-mail address to use.")]),a("li",[a("code",[t._v("subject")]),t._v(": "),a("strong",[t._v("String")]),t._v(". The subject to use.")])]),a("p",[t._v("Example:")]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  driver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"EmailLogger"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// WARN and ERROR levels only")]),t._v("\n  mailer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  mailfrom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webmaster@example.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  mailto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"logs@example.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  subject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Error/Warning from your application."')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[a("code",[t._v("FileLogger")])])]),a("ul",[a("li",[a("code",[t._v("baseDir")]),t._v(": "),a("strong",[t._v("String")]),t._v(". The base directory for log files. Defaults to "),a("code",[t._v("storage/logs")]),t._v(".")]),a("li",[a("code",[t._v("subDir")]),t._v(": "),a("strong",[t._v("String")]),t._v(". The subdirectory to use.")]),a("li",[a("code",[t._v("filePattern")]),t._v(": "),a("strong",[t._v("String")]),t._v('. The file name to write logs to. If "[]" is in the value, it will be replaced with the date and be a rotating log.')])]),a("p",[t._v("Example:")]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  driver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'FileLogger'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  subDir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'daily'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  filePattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[].log'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[a("code",[t._v("JsonPostLogger")])])]),a("ul",[a("li",[a("code",[t._v("headers")]),t._v(": "),a("strong",[t._v("Object")]),t._v(". Request headers to use. Defaults to "),a("code",[t._v("{ 'Content-Type': \"application/json\" }")]),t._v(".")]),a("li",[a("code",[t._v("url")]),t._v(": "),a("strong",[t._v("String")]),t._v(". The URL to send POST requests to.")])]),a("p",[t._v("Example:")]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  driver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'JsonPostLogger'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://example.com/api/submit-log-entry'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[a("code",[t._v("TerminalLogger")])])]),a("ul",[a("li",[a("code",[t._v("useColors")]),t._v(": "),a("strong",[t._v("Boolean")]),t._v(". Whether or not to use different colors for different levels when printing to console. Defaults to "),a("code",[t._v("false")]),t._v(".")])]),a("p",[t._v("Example:")]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  driver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TerminalLogger'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  useColors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"log-levels"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log-levels","aria-hidden":"true"}},[t._v("#")]),t._v(" Log Levels")]),a("p",[t._v("The following section will cover how to use the Logger Service to submit log\nentries. Each log entry will need to have a level, a number from 0-5. They\ncorrespond with standard NPM log levels (listed from most severe to lease\nsevere):")]),a("table",[a("thead",[a("tr",[a("th",[t._v("Level")]),a("th",[t._v("Name")]),a("th",[t._v("Color")]),a("th",[t._v("Usage")])])]),a("tbody",[a("tr",[a("td",[t._v("0")]),a("td",[t._v("ERROR")]),a("td",[t._v("Red")]),a("td",[t._v("Use this for bad errors. It is automatically use by the LogErrors Listener.")])]),a("tr",[a("td",[t._v("1")]),a("td",[t._v("WARN")]),a("td",[t._v("Yellow")]),a("td",[t._v("Use this for things that aren't ideal, but don't necessarily end the world.")])]),a("tr",[a("td",[t._v("2")]),a("td",[t._v("INFO")]),a("td",[t._v("Magenta")]),a("td",[t._v("Use this for useful informative log entries.")])]),a("tr",[a("td",[t._v("3")]),a("td",[t._v("VERBOSE")]),a("td",[t._v("Blue")]),a("td",[t._v("Use this for additional information.")])]),a("tr",[a("td",[t._v("4")]),a("td",[t._v("DEBUG")]),a("td",[t._v("Green")]),a("td",[t._v("Use this for extra information helpful for debugging issues.")])]),a("tr",[a("td",[t._v("5")]),a("td",[t._v("SILLY")]),a("td",[t._v("Gray")]),a("td",[t._v("Use this for generally extraneous entries.")])])])]),a("p",[t._v("Each logger specified in your configuration will have a level associated with\nit. This tells the Logger to only log entries at the specified level\n"),a("em",[t._v("or below")]),t._v(".")]),a("h2",{attrs:{id:"writing-logs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writing-logs","aria-hidden":"true"}},[t._v("#")]),t._v(" Writing Logs")]),a("p",[t._v("You can write log entries using the Logger Service. Each log entry should\nhave a level, a message, and optionally a source. Note that log entries\nwithout a named source will only be logged by loggers listening for all\nsources.")]),a("p",[t._v("Example:")]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" LoggerSvc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Carolina"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Logger'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nLoggerSvc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is a verbose log entry."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nLoggerSvc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'App'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is a verbose log entry with a source."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("When you use the "),a("code",[t._v("log")]),t._v(" method of the Logger Service, each logger object (per\nconfiguration in "),a("code",[t._v("config/logger.js")]),t._v(") will be checked to see if it should act\non it. If so, the log entry will be made according to the type and\nconfiguration of each\nspecific logger.")]),a("h3",{attrs:{id:"shortcut-methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shortcut-methods","aria-hidden":"true"}},[t._v("#")]),t._v(" Shortcut Methods")]),a("p",[t._v("The Logger Service also has shortcut methods for each level:")]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// first arg is message, second is optional source. level is automatic")]),t._v("\nLoggerSvc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A critical error has occured."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"App"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nLoggerSvc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There is a slight problem here."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nLoggerSvc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Here is some information."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nLoggerSvc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("verbose")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Here is some extra information."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nLoggerSvc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("debug")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Now calling myFunc()..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nLoggerSvc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("silly")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LOL hahahaha i don\'t even know what im doing..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}],!1,null,null,null);s.default=n.exports}}]);