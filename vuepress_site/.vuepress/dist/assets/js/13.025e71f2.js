(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{161:function(e,i,a){"use strict";a.r(i);var t=a(0),r=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,i=e.$createElement,a=e._self._c||i;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"e-mail-verification"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#e-mail-verification","aria-hidden":"true"}},[e._v("#")]),e._v(" E-Mail Verification")]),a("p",[e._v("By default in the starter project, users of your application are not required\nto verify their e-mail addresses and such verification e-mails are not sent.\nThese features can be turned on, however. To send verification e-mails to\nnewly registered users, set the "),a("code",[e._v("sendEmailVerification")]),e._v(" property to "),a("code",[e._v("true")]),e._v("\nin "),a("code",[e._v("config/carolina_auth.js")]),e._v(". To require that a user's e-mail be verified\nbefore they are treated as authenticated, set the "),a("code",[e._v("requireEmailVerification")]),e._v("\nproperty to "),a("code",[e._v("true")]),e._v(".")]),a("h2",{attrs:{id:"the-user-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-user-object","aria-hidden":"true"}},[e._v("#")]),e._v(" The User Object")]),a("p",[e._v("The relevant fields on the User object with respect to e-mail verification are\n"),a("code",[e._v("emailVerificationToken")]),e._v(" (a token used by the framework to verify users) and\n"),a("code",[e._v("emailVerified")]),e._v(" (a boolean specifying whether verification has taken place).")]),a("h2",{attrs:{id:"process"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#process","aria-hidden":"true"}},[e._v("#")]),e._v(" Process")]),a("p",[e._v("If "),a("code",[e._v("sendEmailVerification")]),e._v(" or "),a("code",[e._v("requireEmailVerification")]),e._v(" in\n"),a("code",[e._v("config/carolina_auth.js")]),e._v(" is set to "),a("code",[e._v("true")]),e._v(", a verification e-mail will be\nsent out upon new user registrations. If a user clicks the link, their\ne-mail address will be marked as verified and they will be redirect to the\nvalue of the "),a("code",[e._v("emailVerificationRedirect")]),e._v(" in "),a("code",[e._v("config/carolina_auth.js")]),e._v(".")]),a("h2",{attrs:{id:"middleware"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#middleware","aria-hidden":"true"}},[e._v("#")]),e._v(" Middleware")]),a("p",[e._v("There is a Middleware class, "),a("code",[e._v("Carolina/Auth/EmailVerifiedGuardMiddleware")]),e._v(",\nwhich you can use on any routes. It assumes that the user will have been\nextracted to "),a("code",[e._v("request.user")]),e._v(" and will reject all requests that do not have\na verified e-mail address. This is unnecessary if e-mail verification is\nrequired, as that would be enforced by "),a("code",[e._v("Carolina/Auth/AuthGuardMiddleware")]),e._v(".\nBut if e-mail verification is optional, you can use\n"),a("code",[e._v("Carolina/Auth/EmailVerificationMiddleware")]),e._v(" to restrict some routes to only\nusers with verified e-mail addresses.")]),a("h2",{attrs:{id:"events"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#events","aria-hidden":"true"}},[e._v("#")]),e._v(" Events")]),a("p",[e._v("When a user verified his or her e-mail address, a\n"),a("code",[e._v("Carolina/Auth/EmailVerificationEvent")]),e._v(" Event will be thrown, containing\na "),a("code",[e._v("user")]),e._v(" property which will be the user whose e-mail address was just\nverified. The verification will also be logged at INFO level.")])])}],!1,null,null,null);i.default=r.exports}}]);